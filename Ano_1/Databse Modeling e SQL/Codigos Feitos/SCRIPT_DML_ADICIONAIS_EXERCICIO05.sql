-- 3.1
INSERT INTO T_SIP_DEPTO VALUES (1, 'FINANCEIRO', 'FIN');
-- NÃO, HOUVE UM ERRO.
/*
Erro a partir da linha : 2 no comando -
INSERT INTO T_SIP_DEPTO VALUES (1, 'FINANCEIRO', 'FIN')
Relatório de erros -
ORA-00001: restrição exclusiva (RM88670.PK_SIP_DEPTO) violada
*/
-- POIS JA EXISTE ESSA CHAVE PRIMÁRIA

-- 3.2
INSERT INTO T_SPV_CLIENTE VALUES (7, 'CLEBERSSOM CRUZ', 947743651, 16, 42177678, 'X', 'A', 'RUA SABIÁ, 22', 'CLEBERSSOMCRUZ@CLEBERSSOMCRUZ.COM.BR', 11949957212, TO_DATE('27/04/86', 'DD/MM/YY'));
-- NÃO, HOUVE UM ERRO.
/*
Erro a partir da linha : 13 no comando -
INSERT INTO T_SPV_CLIENTE VALUES (7, 'CLEBERSSOM CRUZ', 947743651, 16, 42177678, 'X', 'A', 'RUA SABIÁ, 22', 'CLEBERSSOMCRUZ@CLEBERSSOMCRUZ.COM.BR', 11949957212, TO_DATE('27/04/86', 'DD/MM/YY'))
Relatório de erros -
ORA-02290: restrição de verificação (RM88670.CK_SPV_CLIENTE_GENERO) violada
*/
-- VIOLAÇÃO DE CONSTRAINT CHECK NO DS_GENERO

-- 3.3
INSERT INTO T_SIP_PROJETO VALUES (10006, 'PROJETO MILHO', TO_DATE('25/03/17', 'DD/MM/YY'), NULL);

-- 3.4
CREATE TABLE T_SIP_PROJETO_FIN
(
CD_PROJETO NUMBER(5) NOT NULL ,
NM_PROJETO VARCHAR2(40) NOT NULL ,
DT_INICIO DATE NOT NULL ,
DT_TERMINO DATE NOT NULL
);

ALTER TABLE T_SIP_PROJETO_FIN
ADD CONSTRAINT PK_SIP_PROJETO_FIN
PRIMARY KEY (CD_PROJETO);

INSERT INTO T_SIP_PROJETO_FIN (CD_PROJETO, NM_PROJETO, DT_INICIO, DT_TERMINO)
    (SELECT CD_PROJETO, NM_PROJETO, DT_INICIO, DT_TERMINO
        FROM T_SIP_PROJETO
     WHERE DT_TERMINO IS NOT NULL);

-- 3.5
CREATE TABLE T_TESTE_DEFAULT (
cd_teste NUMBER(2, 0) NOT NULL,
ds_teste VARCHAR2(30) NOT NULL,
dt_realizacao DATE        NULL
);


ALTER TABLE T_TESTE_DEFAULT ADD CONSTRAINT PK_TESTE_CODIGO PRIMARY KEY (CD_TESTE);
    
ALTER TABLE T_TESTE_DEFAULT MODIFY DT_REALIZACAO DEFAULT SYSDATE;

-- 3.5.2.1
INSERT INTO T_TESTE_DEFAULT VALUES (1, 'TESTE', null);
-- SIM, HOUVE INSERCAO
-- FOI ARMAZENADO NULL

-- 3.5.2.2
INSERT INTO T_TESTE_DEFAULT VALUES (2, 'TESTE2', DEFAULT);
-- SIM, HOUVE INSERCAO
-- FOI ARMAZENADO O VALOR DEFAULT 
SELECT * FROM T_TESTE_DEFAULT;

-- 3.5.2.3 
INSERT INTO T_TESTE_DEFAULT VALUES (3, 'TESTE 3', TO_DATE('10/08/2020', 'DD/MM/YYYY'));
-- SIM, HOUVE INSERCAO
-- FOI ARMAZENADO O VALOR DESEJADO , CASO NÃO FOSSE COLOCADO UM VALOR, O SISTEMA ATRIBUIRIA O VALOR DEFAULT

-- 3.5.2.4
INSERT INTO T_TESTE_DEFAULT (cd_teste, ds_teste) VALUES (4, 'TESTE 4');
-- SIM, HOUVE INSERCAO
-- FOI ARMAZENADO O VALOR DEFAULT  DEVIDO A OMISSÃO 

-- 3.5.2.5
INSERT INTO T_TESTE_DEFAULT VALUES (5, 'TESTE 5', sysdate);
-- SIM, HOUVE INSERCAO
-- FOI ARMAZENADO O A DATA DO SERVIDOR ORACLE 

-- 3.6
INSERT INTO T_SPV_PRODUTO VALUES (15, 8, 'MEMORIA', 'MEMORIA', 5, 254);
-- NÃO HOUVE INSERÇÃO
/*
Erro a partir da linha : 83 no comando -
INSERT INTO T_SPV_PRODUTO VALUES (15, 8, 'MEMORIA', 'MEMORIA', 5, 254)
Relatório de erros -
ORA-02291: restrição de integridade (RM88670.FK_SPV_PRODUTO_UNID_CML) violada - chave mãe não localizada
*/
-- HOUVE ERRO DEVIDO A INEXISTENCIA DA CHAVE ESTRANGEIRA NA SPV_UNID_CML

-- 3.7
UPDATE    T_SPV_PRODUTO
   SET    VL_PRECO_UNITARIO = VL_PRECO_UNITARIO * 1.15
 WHERE    CD_UNID_CML = 1;
 
-- 3.8
UPDATE    T_SPV_PRODUTO
   SET    CD_UNID_CML = 3
 WHERE    CD_PRODUTO = 3 OR CD_PRODUTO = 4;

-- OU 

UPDATE    T_SPV_PRODUTO
   SET    CD_UNID_CML = 3
 WHERE    CD_PRODUTO IN (3, 4);

-- 3.9

UPDATE    T_SPV_PRODUTO
   SET    QT_ESTOQUE = QT_ESTOQUE + 10
 WHERE    (QT_ESTOQUE <= 5) AND (CD_UNID_CML <> 3);

SELECT * FROM T_SPV_PRODUTO;

-- 3.10
-- CODIGO ABAIXO ERRADO
UPDATE    T_SPV_ITENS_NF
   SET    vl_preco_unitario = vl_preco_unitario * 1.15, vl_preco_total_item = vl_preco_total_item * 1.15
 WHERE    nr_nf = (SELECT NR_NF FROM T_SPV_NOTA_FISCAL WHERE DT_EMISSAO >= TO_DATE('15/08/2019', 'DD/MM/YYYY'));
-- O OPERADOR DE IGUALDADE (=) SO CONSEGUE VALIDAR UM VALOR -> NR_NOTA_FISCAL = 1234
-- O OPERADOR DE IGUALDADE NAO CONSEGUE VALIDAR VARIOS VALORES -> NR_NOTA_FISCAL = 1234 1235 1236
-- SUBCONSULTA (SUBQUERY) RECUPERA TODAS AS NOTAS FISCAIS A PARTIR DA DATA INFORMADA
-- O RESULTADO DA SUBQUERY SERA UTILIZADO COMO ARGUMENTO/FILTRO, PARA ALTERAR OS ITENS DESTAS NOTAS FISCAIS APENAS
UPDATE    T_SPV_ITENS_NF
   SET    vl_preco_unitario = vl_preco_unitario * 1.15, vl_preco_total_item = vl_preco_total_item * 1.15
 WHERE    nr_nf IN (SELECT NR_NF FROM T_SPV_NOTA_FISCAL WHERE DT_EMISSAO >= TO_DATE('15/08/2019', 'DD/MM/YYYY'));

-- 3.11
UPDATE    T_SPV_NOTA_FISCAL
   SET    vl_total_nf = vl_total_nf * 1.15
 WHERE    DT_EMISSAO >= TO_DATE('15/08/2019', 'DD/MM/YYYY');
 
-- 3.12
DELETE FROM T_SPV_ITENS_NF
WHERE nr_nf = 1236;

DELETE FROM T_SPV_NOTA_FISCAL
WHERE nr_nf = 1236;

-- 3.13
DELETE FROM T_SPV_ITENS_NF;

ROLLBACK;

SELECT * FROM T_SPV_ITENS_NF;
-- SIM FOI POSSÍVEL DESFAZER A TRANSAÇÃO, UMA VEZ QUE O COMMIT NAO FOI EFETIVADO

COMMIT;
