-- JUNCOES POR IGUALDADE, ONDE TEMOS RELACIONAMENTO E COMPARACAO DE PK = FK
-- INNRER JOIN = JUNCAO INTERNA = INTERSECÇÃO ENTRE CONJUNTOS = RECUPERAR TUDO QUE SE ASSOCIA 

-- EXEMPLO - EQUIJOIN (IGUALDADE)
-- SINTAXE: SQL/99 (VERSAO PADRONIZOU OS JOIN'S

-- RECUPERAR TODOS OS FUNCIONARIOS QUE TRABALHAM EM DEPTOS (FUNCIONARIOS ASSOCIADOS A DEPTOS)
-- QUAIS FUNCIONARIOS E QUAIS DEPTOS ELES TRABALHAM ? -- A PERGUNTA AJUDA A DECIDIR QUAL JOIN UTILIZAR

SELECT  D.SG_DEPTO || '-' || D.NM_DEPTO "DEPARTAMENTO",
        F.NR_MATRICULA, F.NM_FUNCIONARIO -- COLUNAS DAS TABELAS QUE DESEJA CONSULTAR
    FROM T_SIP_DEPTO D INNER JOIN T_SIP_FUNCIONARIO F -- A LETRA DEPOIS DA TABELA É APELIDO (ALIAS)
        ON (D.CD_DEPTO = F.CD_DEPTO) -- COMPARACAO POR IGUALDADE PK = FK 
 WHERE D.CD_DEPTO = 2 -- RECUPERAR APENAS QUEM É DO DEPTO TI = 2
ORDER BY D.NM_DEPTO, F.NM_FUNCIONARIO; -- CONTEUDO ORDENADO POR DEPTO E NOME FUNCIONARIO CRESCENTE


SELECT * FROM T_SIP_DEPTO; WHERE NM_DEPTO;


-- SINTAXE ANTERIOR AO SQL/99
SELECT D.NM_DEPTO, F.NR_MATRICULA, F.NM_FUNCIONARIO
    FROM T_SIP_DEPTO D, T_SIP_FUNCIONARIO F -- TABELAS DECLARADAS NO FROM 
    WHERE D.CD_DEPTO = F.CD_DEPTO; -- COMPARACAO DE PK = FK NA CLAUSULA WHERE 


-- INNER JOIN
-- A ideia é recuperar todos os funcionários que possuam dependentes e
-- todos os dependentes que pertencem a funcionários.
-- QUAIS SAO OS DEPENDENTES DE CADA FUNCIONARIO?
SELECT F.NM_FUNCIONARIO, D.NM_DEPENDENTE, D.DT_NASCIMENTO
    FROM T_SIP_FUNCIONARIO F INNER JOIN T_SIP_DEPENDENTE D -- A PRIMEIRO TABELA É A DE ORIGEM, A SEGUNDA É A DESTINO QUE RECEBE COMO FK
        ON (F.NR_MATRICULA = D.NR_MATRICULA); -- PK = FK 

-- JUNÇÃO INTERNA (INNER JOIN) DE DUAS OU MAIS TABELAS
-- RECUPERAR TODOS OS PROJETOS QUE TENHAM SUAS IMPLANTAÇÕES INICIADAS
-- POR FUNCIONARIOS
-- QUAIS SÃO OS PROJETOS EM IMPLANTAÇÃO E QUAIS FUNCIONARIOS TRABALHAM NESSES PROJETOS?
-- EXEMPLO COM INNER JOIN - PADRÃO SQL/99
-- !!!!!!!!!!!!!!!!!! CONSULTA DE UM TOTAL DE 3 TABELAS, CUIDADO COM O RELACIONAMENTO !!!!!!!!!!!!!!!!!!!

SELECT  F.NR_MATRICULA "MATRICULA", 
        F.NM_FUNCIONARIO "FUNCIONARIO",
        P.NM_PROJETO "PROJETO",
        I.DT_ENTRADA "INICIOU A IMPLANTACAO EM:",
        I.DT_SAIDA "FINALIZOU A IMPLANTACAO EM:"
    FROM T_SIP_PROJETO P, INNER JOIN, T_SIP_IMPLANTACAO I
        ON (P.CD_PROJETO = I.CD_PROJETO)
        INNER JOIN T_SIP_FUNCIONARIO F
        ON (F.NR_MATRICULA = I.NR_MATRICULA)
ORDER BY P.NM_PROJETO, F.NM_FUNCIONARIO, I.DT_INICIO DESC;


SELECT * FROM T_SIP_PROJETO;
SELECT * FROM T_SIP_PROJETO_FIN;


-- LEFT OUTER JOIN / LEFT JOIN
-- A IDEIA É RECUPERAR TODOS OS FUNCIONARIOS QUE POSSUEM E NAO POSSUEM DEPENDENTES
    SELECT F.NR_MATRICULA, F.NM_FUNCIONARIO, D.NM_DEPENDENTE
      FROM T_SIP_FUNCIONARIO F LEFT OUTER JOIN T_SIP_DEPENDENTE D
          ON(F.NR_MATRICULA = D.NR_MATRICULA);
      
-- OU

    SELECT F.NR_MATRICULA, F.NM_FUNCIONARIO, D.NM_DEPENDENTE
      FROM T_SIP_FUNCIONARIO F LEFT JOIN T_SIP_DEPENDENTE D
          ON(F.NR_MATRICULA = D.NR_MATRICULA);

-- LEFT OUTER JOIN
-- A ideia é recuperar todos os Funcionários que não possuem Dependentes
SELECT  F.NR_MATRICULA,
        F.NM_FUNCIONARIO,
        D.NM_DEPENDENTE,
        D.CD_DEPENDENTE,
        D.NR_MATRICULA
    FROM T_SIP_FUNCIONARIO F LEFT OUTER JOIN T_SIP_DEPENDENTE D
        ON (F.NR_MATRICULA = D.NR_MATRICULA)
        WHERE D.NR_MATRICULA IS NULL --> verificando se a FK é nula, portanto não enctrou correspondência
ORDER BY D.NM_DEPENDENTE;


-- RIGHT OUTER JOIN
-- A ideia é recuperar todos os Projetos, que foram OU NAO implantados.
SELECT  P.NM_PROJETO "PROJETO",
        P.DT_INICIO "INICIADO EM",
        I.CD_IMPLANTACAO "COD. IMPLANT",
        I.DT_ENTRADA "IMPLANTACAO INICIADA EM",
        I.DT_SAIDA "IMPLANTACAO FINALIZADAEM"
    FROM T_SIP_IMPLANTACAO I RIGHT OUTER JOIN T_SIP_PROJETO P
        ON (P.CD_PROJETO = I.CD_PROJETO); -- PK = FK


-- RIGHT OUTER JOIN
-- A ideia é recuperar todos os Projetos, que ainda NAO foram implantados.
SELECT  P.NM_PROJETO "PROJETO",
        P.DT_INICIO "INICIADO EM",
        I.CD_IMPLANTACAO "COD. IMPLANT",
        I.DT_ENTRADA "IMPLANTACAO INICIADA EM",
        I.DT_SAIDA "IMPLANTACAO FINALIZADAEM"
        FROM T_SIP_IMPLANTACAO I RIGHT OUTER JOIN T_SIP_PROJETO P
            ON (P.CD_PROJETO = I.CD_PROJETO) -- PK = FK
    WHERE I.CD_PROJETO IS NULL; -- FK IS NULL


-- CROSS JOIN
-- EXEMPLO - CROSS JOIN (PRODUTO CARTESIANO)
-- TODAS AS LINHAS DA TABELA A, IRAO SE ASSOCIAR COM LINHAS DA TABELA B
-- TODAS AS LINHAS DA TABELA B, IRAO SE ASSOCIAR COM LINHAS DA TABELA A
-- UTILIZANDO O PADRÃO SQL/99
    SELECT D.NM_DEPTO, F.NM_FUNCIONARIO
      FROM T_SIP_DEPTO D CROSS JOIN T_SIP_FUNCIONARIO F;
-- ANTES DO PADRÃO SQL/99
    SELECT D.NM_DEPTO, F.NM_FUNCIONARIO
      FROM T_SIP_DEPTO D, T_SIP_FUNCIONARIO F;
      







