-- SCRIPT (PASSO A PASSO)
-- SCRIPT DDL -> PASSO A PASSO PARA CRIAR A ESTRUTURA DE UM BD
-- DDL -> DIVISÃO DA LINGUAGEM SQL -> LINGUAGEM DE DEFINIÇÃO DE DADOS (CREATE, ALTER E DROP TABLE)

-- NOME DO ARQUIVO (SCRIPT): SCRIPT_DDL_PROJETO_SIP.SQL

-- DDL: CREATE, ALTER E DROP
-- CREATE -> PERMITE CRIAR A ESTRUTURA DA TABELA
-- ALTER -> PERMITE MODIFICAR A ESTRUTURA DA TABELA
-- DROP -> PERMITE ELIMINAR A ESTRUTURA DA TABELA

-- COMANDOS DDL NÃO SAO CASE SENSITIVE -> NÃO FAZ DIFERENÇA ENTRE MAIUSCULAS E MINUSCULAS

-- BOAS PRÁTICAS - RECOMENDAÇÃO PARA DISTRIBUIÇÃO DO CÓDIGO (COMANDOS) NO SCRIPT
-- QUANTO MENOR OS TRECHOS DE CÓDIGO, MAIS FÁCIL A MANUTENÇÃO
-- 1o. DEIXAR NO TOPO DO ARQUIVO, OS COMANDOS PARA DELEÇÃO DA ESTRUTURA - PARA SER UTILIZADO QUANDO NECESSARIO
-- 2o. CRIAR AS TABELAS COM OS CAMPOS, TIPO DE DADO E OBRIGATORIEDADE (ONDE SE APLICAR)
-- 3o. PARA CADA TABELA, CRIAR A CHAVE PRIMARIA CORRESPONDENTE, ATRAVÉS DE UM COMANDO DE ALTERAÇÃO
-- 4o. PARA CADA TABELA, CRIAR AS CONSTRAINTS: UNIQUE E CHECK (ONDE SE APLICAR), ATRAVÉS DE UM COMANDO DE ALTERAÇÃO
-- 5o. NO FINAL DO ARQUIVO (DEPOIS DA CRIAÇÃO DE TODAS AS TABELAS - CRIAR AS CONSTRAINTS FOREIGN KEY (CHAVES ESTRANGEIRAS) - 
--     ATRAVÉS DE UM COMANDO DE ALTERAÇÃO

/*
COMENTARIO DE BLOCO
COMENTARIO DE BLOCO
COMENTARIO DE BLOCO
COMENTARIO DE BLOCO
*/


-- COMANDOS PARA ELIMINAR (APAGAR) AS TABELAS DE UM BD (APAGA A TABELA E O CONTEÚDO-REGISTROS SE EXISTIR)
-- PONTO DE ATENÇÃO: ELIMINAR RESPEITANDO AS DEPENDENCIAS DOS RELACIONAMENTOS. DE MODO QUE CADA TABELA DELETADA,
-- PRECISA ELIMINAR O RELACIONAMENTO, PARA QUE AS TABELAS DEPENDENTES SEJAM SOLTAS.
/*
DROP TABLE T_SIP_FUNCIONARIO CASCADE CONSTRAINTS;
DROP TABLE T_SIP_DEPTO       CASCADE CONSTRAINTS; 
DROP TABLE T_SIP_DEPENDENTE     CASCADE CONSTRAINTS;
DROP TABLE T_SIP_PROJETO        CASCADE CONSTRAINTS;
DROP TABLE T_SIP_IMPLANTACAO    CASCADE CONSTRAINTS;
*/
-- OPÇÃO CASCADE CONSTRAINT ELIMINA O RELACIONAMENTO


-- CRIAR A TABELA DEPTO
CREATE TABLE T_SIP_DEPTO
(
    cd_depto    NUMBER(3)       NOT NULL ,
    nm_depto    VARCHAR2(30)    NOT NULL ,
    sg_depto    CHAR(3)         NOT NULL 
);
-- ADICIONAR A CONSTRAINT CHAVE PRIMARIA
   ALTER TABLE T_SIP_DEPTO    -- COMANDO DE ALTERAÇÃO INFORMANDO O NOME DA TABELA
ADD CONSTRAINT PK_SIP_DEPTO   -- ADICIONAR CONSTRAINT / NOME CONSTRAINT
   PRIMARY KEY (cd_depto);    -- TIPO DE CONSTRAINT (PK) / NOME DO CAMPO (PK)
   
-- ADICIONAR A CONSTRAINT UNIQUE
   ALTER TABLE T_SIP_DEPTO
ADD CONSTRAINT UN_SIP_DEPTO_NOME
        UNIQUE (nm_depto);   -- TIPO DE CONSTRAINT (UNIQUE) / NOME DO CAMPO (UNIQUE)
        

-- LUIS
-- CRIAR A TABELA FUNCIONARIO
CREATE TABLE T_SIP_FUNCIONARIO
(
    nr_matricula        NUMBER(5)       NOT NULL ,
    CD_DEPTO            NUMBER(3)       NOT NULL , -- CAMPO CHAVE ESTRANGEIRA
    nm_funcionario      VARCHAR(50)     NOT NULL ,
    dt_nascimento       DATE            NOT NULL ,
    dt_admissao         DATE            NOT NULL ,
    ds_endereco         VARCHAR(100)    NOT NULL ,
    VL_SALARIO_MENSAL   NUMBER(7,2)     NOT NULL
);
-- ADICIONAR A CONSTRAINT CHAVE PRIMARIA
   ALTER TABLE T_SIP_FUNCIONARIO
ADD CONSTRAINT PK_SIP_FUNCIONARIO
   PRIMARY KEY (nr_matricula);
   
-- ADICIONAR A CONSTRAINT CHECK
   ALTER TABLE T_SIP_FUNCIONARIO
ADD CONSTRAINT CK_SIP_FUNC_SALARIO
         CHECK (VL_SALARIO_MENSAL >= 1045);

-- CRIAR A TABELA DEPENDENTE
-- LUIS
CREATE TABLE T_SIP_DEPENDENTE
(
    nr_matricula        NUMBER(5)       NOT NULL,
    cd_dependente       NUMBER(2)       NOT NULL,
    nm_dependente       VARCHAR2(50)    NOT NULL,
    dt_nascimento       DATE            NOT NULL
);
-- ADICIONAR A CONSTRAINT CHAVE PRIMARIA
   ALTER TABLE T_SIP_DEPENDENTE
ADD CONSTRAINT PK_SIP_DEPENDENTE
   PRIMARY KEY (NR_MATRICULA, CD_DEPENDENTE); -- PK COMPOSTA POR DOIS CAMPOS (ENTIDADE/TABELA: FRACA)


-- CRIAR A TABELA PROJETO
-- PRISCILA
CREATE TABLE T_SIP_PROJETO
(
    cd_projeto      NUMBER(5)       NOT NULL,
    nm_projeto      VARCHAR2(40)    NOT NULL,
    dt_inicio       DATE            NOT NULL,
    dt_termino      DATE                NULL
      -- CAMPO OPCIONAL - ESCREVEMOS APENAS NULL, OU NÃO ESCREVEMOS NADA
      -- NULL É A OPÇÃO DEFAULT (PADRÃO), QUANDO NÃO ESCREVEMOS O ORACLE ENTENDE NULL
);
 -- ADICIONANDO CONSTRAINT CHAVE PRIMARIA
    ALTER TABLE T_SIP_PROJETO
 ADD CONSTRAINT PK_SIP_PROJETO
    PRIMARY KEY (cd_projeto);
-- ADICIONANDO CONSTRAINT UNIQUE
   ALTER TABLE T_SIP_PROJETO
ADD CONSTRAINT UN_SIP_PROJETO_NOME
        UNIQUE (nm_projeto);
-- ADICIONANDO A CHECK CONSTRAINT
-- LUIS
   ALTER TABLE T_SIP_PROJETO
ADD CONSTRAINT CK_SIP_PROJETO_DATA
         CHECK (dt_termino > dt_inicio);

-- LUIS
-- CRIAR A TABELA IMPLANTACAO
CREATE TABLE T_SIP_IMPLANTACAO
(
    cd_projeto      NUMBER(5)   NOT NULL,
    cd_implantacao  NUMBER(3)   NOT NULL,
    nr_matricula    NUMBER(5)   NOT NULL,
    dt_entrada      DATE        NOT NULL,
    dt_saida        DATE            NULL
);
-- ADICIONAR A CONSTRAINT CHAVE PRIMARIA
   ALTER TABLE T_SIP_IMPLANTACAO
ADD CONSTRAINT PK_SIP_IMPLANTACAO
   PRIMARY KEY (cd_projeto, cd_implantacao); -- CHAVE PRIMARIA COMPOSTA - ENTIDADE/TABELA ASSOCIATIVA       
-- ADICIONAR A CONSTRAINT CHECK
   ALTER TABLE T_SIP_IMPLANTACAO
ADD CONSTRAINT CK_SIP_IMPLANT_DATA
         CHECK (dt_saida > dt_entrada);
-----------------------------------------------------------------------------
-- CRIAÇÃO DAS CONSTRAINTS CHAVES ESTRANGEIRAS - NO FINAL DO ARQUIVO       --
-- PRECISAMOS DE TODAS AS TABELAS E CHAVES PRIMARIAS CRIADAS               --
-- CASO CONTRARIO, NÃO E POSSÍVEL CRIAR OS RELACIONAMENTOS                 --
-----------------------------------------------------------------------------
-- CRIAR O RELACIONAMENTO ENTRE FUNCIONARIO (DESTINO) E DEPARTAMENTO (ORIGEM)
   ALTER TABLE T_SIP_FUNCIONARIO
ADD CONSTRAINT FK_SIP_FUNC_DEPTO
   FOREIGN KEY (CD_DEPTO)  -- TIPO DE CONSTRAINT (FK) / NOME DO CAMPO CHAVE ESTRANGEIRA NA TABELA FUNCIONARIO
    REFERENCES T_SIP_DEPTO (CD_DEPTO); -- REFERENCIA=RELACIONAMENTO COM A TABELA DEPTO/ CAMPO CD_DEPTO (PK)

-- LUIS
-- CRIAR O RELACIONAMENTO ENTRE O DEPENDENTE (DESTINO) E FUNCIONARIO (ORIGEM)
   ALTER TABLE T_SIP_DEPENDENTE
ADD CONSTRAINT FK_SIP_DEPENDENTE_FUNC
   FOREIGN KEY (nr_matricula)
    REFERENCES T_SIP_FUNCIONARIO (nr_matricula);

-- PRISCILA
-- CRIAR O RELACIONAMENTO ENTRE IMPLANTACAO (DESTINO) E PROJETO(ORIGEM)
    ALTER TABLE T_SIP_IMPLANTACAO
 ADD CONSTRAINT FK_SIP_IMPLANT_PROJETO
    FOREIGN KEY (cd_projeto)
     REFERENCES T_SIP_PROJETO (cd_projeto);

--LUIS
-- CRIAR O RELACIONAMENTO ENTRE IMPLANTACAO (DESTINO) E FUNCIONARIO(ORIGEM)
   ALTER TABLE T_SIP_IMPLANTACAO
ADD CONSTRAINT FK_SIP_IMPLANT_FUNC
   FOREIGN KEY (nr_matricula)
    REFERENCES T_SIP_FUNCIONARIO (nr_matricula);
    